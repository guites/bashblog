<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
<channel><title>Blog do guilherme</title><link>https://guilhermegarcia.dev/blog/index.html</link>
<description>programação e outras coisas menos úteis</description><language>en</language>
<lastBuildDate>Sun, 06 Nov 2022 15:48:23 -0300</lastBuildDate>
<pubDate>Sun, 06 Nov 2022 15:48:23 -0300</pubDate>
<atom:link href="https://guilhermegarcia.dev/blog/feed.rss" rel="self" type="application/rss+xml" />
<item><title>
Busca sem backend - parte 1
</title><description><![CDATA[

<p><abbr title="muito grande;nem li">mg;nl</abbr>: Vamos ver como adicionar um mecanismo de busca em um site estático. Neste post vamos criar um script que gera um arquivo json contendo os conteúdos do site, juntando o título, sumário, tags e palavras chave geradas utilizando a ferramenta <a href="https://github.com/LIAAD/yake">yake</a>.</p>

<p>A barra de busca: essencial, mas de dificil implementação se você não tiver acesso a um banco de dados. </p>

<p>Em sites dinâmicos, no qual o conteúdo é resgatado de um banco de dados a cada acesso, você pode utilizar um formulário, que envia os valores digitados pelo usuário (termos de busca) a um endpoint que as utiliza para realizar uma consulta no banco de dados, e retorna os resultados para o usuário.</p>

<p>Em sites estáticos (como esse, que é hospedado no <a href="https://pages.github.com/">github pages</a>), todo o conteúdo disponível para o usuário precisa ser previamente criado e hospedado. Ou seja, não temos como responder de forma dinâmica às combinações (praticamente infinitas) de palavras chave que um usuário pode buscar.</p>

<p>Para um site pequeno, porém, podemos estruturar o conteúdo em um formato de fácil consulta, como o <a href="https://www.json.org/json-en.html">json</a>, e deixá-lo salvo no servidor. </p>

<p>Daí podemos receber os termos de busca digitados pelo usuário e usar algumas linhas de javascript para carregar o arquivo, aplicar o filtro, e retornar os resultados.</p>

<p>Neste primeiro post, vamos desenvolver um script em python que percorre as publicações do site e formata as informações essenciais em um formato facilmente consultável.</p>

<hr/>
<p>Tags: <a href='tag_python.html'>python</a>, <a href='tag_json.html'>json</a>, <a href='tag_busca.html'>busca</a>, <a href='tag_nlp.html'>nlp</a></p>
<p id='twitter'><a href='http://twitter.com/intent/tweet?url=https://guilhermegarcia.dev/blog/busca-sem-backend---parte-1.html&text=&lt;Escreva seu comentário aqui mas mantenha a url para outras pessoas seguirem o comentário&gt;&via=gui_garcia67'>Comentários? Tweet</a> 
<a href='https://twitter.com/search?q=https://guilhermegarcia.dev/blog/busca-sem-backend---parte-1.html'><span id='count-16648'></span></a>&nbsp;</p>
]]></description><link>https://guilhermegarcia.dev/blog/busca-sem-backend---parte-1.html</link>
<guid>https://guilhermegarcia.dev/blog/./busca-sem-backend---parte-1.html</guid>
<dc:creator>Guilherme Garcia</dc:creator>
<pubDate>Sun, 06 Nov 2022 15:36:37 -0300</pubDate></item>
<item><title>
Comparando json na linha de comando
</title><description><![CDATA[

<p><abbr title="muito grande;nem li">mg;nl</abbr>: vamos usar o <a href="https://vimdoc.sourceforge.net/htmldoc/diff.html">vimdiff</a> e o <a href="https://stedolan.github.io/jq/">jq</a> para comparar arquivos json independente da formatação.</p>

<p>Comparar arquivos json parecidos pode ser complicado. Muitas vezes os arquivos foram formatados com espaçamentos diferentes, ou a diferença não ocorre no mesmo nível hierarquico.</p>

<p>Vamos criar um script simples pra comparar arquivos json diretamente pelo terminal, usando o programa <code>jq</code> e o <code>vimdiff</code>.</p>

<p>Vamos ver também como preparar um script bash pra lidar com erros conhecidos, como arquivos com json inválido ou de outro formato.</p>

<p><aside>Os exemplos usados foram gerados usando <a href="https://json-generator.com">https://json-generator.com</a></aside></p>

<hr/>
<p>Tags: <a href='tag_json.html'>json</a>, <a href='tag_vimdiff.html'>vimdiff</a>, <a href='tag_cli.html'>cli</a>, <a href='tag_bash.html'>bash</a></p>
<p id='twitter'><a href='http://twitter.com/intent/tweet?url=https://guilhermegarcia.dev/blog/comparando-json-na-linha-de-comando.html&text=&lt;Escreva seu comentário aqui mas mantenha a url para outras pessoas seguirem o comentário&gt;&via=gui_garcia67'>Comentários? Tweet</a> 
<a href='https://twitter.com/search?q=https://guilhermegarcia.dev/blog/comparando-json-na-linha-de-comando.html'><span id='count-25112'></span></a>&nbsp;</p>
]]></description><link>https://guilhermegarcia.dev/blog/comparando-json-na-linha-de-comando.html</link>
<guid>https://guilhermegarcia.dev/blog/./comparando-json-na-linha-de-comando.html</guid>
<dc:creator>Guilherme Garcia</dc:creator>
<pubDate>Tue, 25 Oct 2022 22:45:36 -0300</pubDate></item>
<item><title>
A ordem dos exports importa
</title><description><![CDATA[

<p><abbr title="muito grande;nem li">mg;nl</abbr>: quando você utiliza um arquivo index.js para exportar módulos no react, a ordem dos exports pode quebrar seu app se dois módulos importam um ao outro, causando um <code>Uncaught TypeError: _MyModule__WEBPACK_IMPORTED_MODULE_1__ is undefined</code>.</p>

<p>O react tem uma funcionalidade muito boa, o <a href="https://create-react-app.dev/docs/importing-a-component/#absolute-imports">absolute imports</a>, que ajuda você a não precisar ficar lidando com o caminho relativo entre os arquivos.</p>

<p>Se seu app tem uma estrutura do tipo</p>

<pre><code>    - src/
        - components/
        - pages/
</code></pre>

<p>Você pode, num arquivo em <code>src/pages/Home.jsx</code>, importar módulos de duas formas</p>

<pre><code>    // bad! &gt;:(
    import { ButtonGroup } from '../components/ButtonGroup';
    import { MyButton } from '../components/RadioGroup';

    // good! &gt;:)
    import { ButtonGroup, MyButton } from 'components';
</code></pre>

<p>Basta você largar um arquivo <code>jsconfig.json</code> na raíz do seu projeto, passando o diretório <code>src/</code> como <code>baseUrl</code>:</p>

<pre><code>    {
      "compilerOptions": {
        "baseUrl": "src"
      },
      "include": ["src"]
    }
</code></pre>

<p>Porém existem algum gotchas quando você começa a agrupar seus exports.</p>

<hr/>
<p>Tags: <a href='tag_react.html'>react</a>, <a href='tag_javascript.html'>javascript</a></p>
<p id='twitter'><a href='http://twitter.com/intent/tweet?url=https://guilhermegarcia.dev/blog/a-ordem-dos-exports-importa.html&text=&lt;Escreva seu comentário aqui mas mantenha a url para outras pessoas seguirem o comentário&gt;&via=gui_garcia67'>Comentários? Tweet</a> 
<a href='https://twitter.com/search?q=https://guilhermegarcia.dev/blog/a-ordem-dos-exports-importa.html'><span id='count-17220'></span></a>&nbsp;</p>
]]></description><link>https://guilhermegarcia.dev/blog/a-ordem-dos-exports-importa.html</link>
<guid>https://guilhermegarcia.dev/blog/./a-ordem-dos-exports-importa.html</guid>
<dc:creator>Guilherme Garcia</dc:creator>
<pubDate>Wed, 12 Oct 2022 01:57:25 -0300</pubDate></item>
<item><title>
Remova o feed do github
</title><description><![CDATA[

<p><abbr title="muito grande;nem li">mg;nl</abbr>: vamos criar um bookmarklet pra remover o feed da página inicial do github.</p>

<p>Se você é como eu, provavelmente já entrou no seguinte loop:</p>

<ol>
<li>Você fica com dúvida sobre um projeto hospedado no github</li>
<li>Você acessa <a href="https://github.com">https://github.com</a>.</li>
<li>Você fica interessado no que as pessoas andaram fazendo, e acaba clicando em alguma coisa.</li>
<li>Você mata a curiosidade e sai do github.</li>
<li>????</li>
<li>Você lembra da dúvida sobre o projeto</li>
<li>repeat</li>
</ol>

<p>Vamos remover a distração da homepage do github usando um pouco de javascript.</p>

<hr/>
<p>Tags: <a href='tag_bookmarklet.html'>bookmarklet</a>, <a href='tag_javascript.html'>javascript</a></p>
<p id='twitter'><a href='http://twitter.com/intent/tweet?url=https://guilhermegarcia.dev/blog/remova-o-feed-do-github.html&text=&lt;Escreva seu comentário aqui mas mantenha a url para outras pessoas seguirem o comentário&gt;&via=gui_garcia67'>Comentários? Tweet</a> 
<a href='https://twitter.com/search?q=https://guilhermegarcia.dev/blog/remova-o-feed-do-github.html'><span id='count-22818'></span></a>&nbsp;</p>
]]></description><link>https://guilhermegarcia.dev/blog/remova-o-feed-do-github.html</link>
<guid>https://guilhermegarcia.dev/blog/./remova-o-feed-do-github.html</guid>
<dc:creator>Guilherme Garcia</dc:creator>
<pubDate>Mon, 10 Oct 2022 20:53:57 -0300</pubDate></item>
<item><title>
Interceptando tokens com puppeteer
</title><description><![CDATA[

<p><abbr title="muito grande; nem li">mg;nl</abbr>: vamos ver como automatizar o login em um app e interceptar as requisições realizadas, com o objetivo de acessar os tokens gerados pelo front end de uma aplicação.</p>

<p>Digamos que você esteja trabalhando com uma API que exige autenticação.</p>

<p>Você consegue autenticar pelo frontend, mas gostaria de uma forma automatizada de acessar o token, para trabalhar
com as requisições pelo terminal, ou via postman/insomnia:</p>

<pre><code>    curl -X POST -H 'Bearer tokensecretogeradonofrontend' https://api-autenticada.net/resources
</code></pre>

<p>Dependendo da solução de identidade e autenticação utilizada na API, você pode tentar reproduzir as requisições e gerar o token no seu formato final.</p>

<p>Mas alguns provedores, como o <a href="https://www.okta.com/">Okta</a> ou o <a href="https://www.keycloak.org/">Keycloak</a> dificultam essa tática, pois envolvem o uso de <a href="https://pt.wikipedia.org/wiki/Nonce">nonces</a> ou processamento adicional dos valores trocados entre cliente e servidor.</p>

<p>Essas etapas são de difícil reprodução, e podem tomar muito tempo.</p>

<p>Uma alternativa é a automatização do acesso realizado no front end com um navegador <code>headless</code>, como o puppeteer.</p>

<hr/>
<p>Tags: <a href='tag_node.html'>node</a>, <a href='tag_puppeteer.html'>puppeteer</a>, <a href='tag_oauth2.html'>oauth2</a></p>
<p id='twitter'><a href='http://twitter.com/intent/tweet?url=https://guilhermegarcia.dev/blog/interceptando-tokens-com-puppeteer.html&text=&lt;Escreva seu comentário aqui mas mantenha a url para outras pessoas seguirem o comentário&gt;&via=gui_garcia67'>Comentários? Tweet</a> 
<a href='https://twitter.com/search?q=https://guilhermegarcia.dev/blog/interceptando-tokens-com-puppeteer.html'><span id='count-9818'></span></a>&nbsp;</p>
]]></description><link>https://guilhermegarcia.dev/blog/interceptando-tokens-com-puppeteer.html</link>
<guid>https://guilhermegarcia.dev/blog/./interceptando-tokens-com-puppeteer.html</guid>
<dc:creator>Guilherme Garcia</dc:creator>
<pubDate>Mon, 10 Oct 2022 10:48:57 -0300</pubDate></item>
<item><title>
PoC: Stream de videos com javascript no navegador
</title><description><![CDATA[

<p><abbr title="muito grande; nemli">mg;nl</abbr>: vamos desenvolver um reprodutor de vídeos utilizando a API MediaSource do navegador e o conceito de fragmentação de vídeos, no modelo utilizado por sites como twitter, facebook e netflix.</p>

<p>Ao acessar sites com stream de vídeo, como twitter, facebook ou netflix, e visualizar um vídeo, você pode se deparar com duas situações: Na primeira, o vídeo está encapsulado em uma tag <code>&lt;video&gt;</code>, com um <code>src</code> ou algumas tags <code>&lt;source&gt;</code>, indicando a URL do vídeo.</p>

<p>Neste caso, você pode facilmente, inspecionando a tela, copiar a URL do vídeo e abrí-la em outra aba, ou salvar no seu computador.</p>

<p>Por exemplo: <a href="https://twitter.com/TheOtaking/status/1507809616993742848">https://twitter.com/TheOtaking/status/1507809616993742848</a></p>

<p>O GIF mostrado na página é, na verdade, um mp4, e, inspecionando a estrutura do html, descobrimos que ele está no seguinte formato:</p>

<pre><code>&lt;video preload="auto" playsinline="" aria-label="Embedded video" disablepictureinpicture="" style="width: 100%; height: 100%; position: absolute; background-color: black; top: 0%; left: 0%; transform: rotate(0deg) scale(1.005);" poster="https://pbs.twimg.com/tweet_video_thumb/FOzEMPDXEAEE_e5.jpg" src="https://video.twimg.com/tweet_video/FOzEMPDXEAEE_e5.mp4" type="video/mp4"&gt;&lt;/video&gt;
</code></pre>

<p>Você pode facilmente salvar a URL <a href="https://video.twimg.com/tweet_video/FOzEMPDXEAEE_e5.mp4">https://video.twimg.com/tweet_video/FOzEMPDXEAEE_e5.mp4</a>, reproduzí-la em outros ambientes, ou fazer o download do arquivo.</p>

<p>Na segunda situação, você também encontra uma tag <code>video</code>, mas seu atributo <code>src</code> não é uma URL comum: se trata de um blob.</p>

<p>Exemplo: <a href="https://twitter.com/TheOtaking/status/1507278342176882730">https://twitter.com/TheOtaking/status/1507278342176882730</a></p>

<p>O vídeo possui os controles habilitados, e, inspecionando a página, sua estrutura é a seguinte:</p>

<pre><code>&lt;video preload="none" playsinline="" aria-label="Embedded video" disablepictureinpicture="" style="width: 100%; height: 100%; position: absolute; background-color: black; top: 0%; left: 0%; transform: rotate(0deg) scale(1.005);" poster="https://pbs.twimg.com/ext_tw_video_thumb/1507278264003440640/pu/img/1OLNuDRaCHoKzs1e.jpg" src="blob:https://twitter.com/dfc0270a-52b1-4ea8-a49d-bc9939732deb"&gt;&lt;/video&gt;
</code></pre>

<p>Se você tentar acessar a URL <blob:https://twitter.com/dfc0270a-52b1-4ea8-a49d-bc9939732deb>, ou mesmo <a href="https://twitter.com/dfc0270a-52b1-4ea8-a49d-bc9939732deb">https://twitter.com/dfc0270a-52b1-4ea8-a49d-bc9939732deb</a>, vai receber um erro de página não encontrada.</p>

<p>Neste post, vamos entender o funcionamento das URLs blob, qual os benefícios do seu uso, e desenvolver uma prova de conceito mostrando como implementar uma funcionalidade de stream em javascript.</p>

<hr/>
<p>Tags: <a href='tag_streaming.html'>streaming</a>, <a href='tag_javascript.html'>javascript</a>, <a href='tag_node.html'>node</a>, <a href='tag_poc.html'>poc</a></p>
<p id='twitter'><a href='http://twitter.com/intent/tweet?url=https://guilhermegarcia.dev/blog/poc-stream-de-videos-com-javascript-no-navegador.html&text=&lt;Escreva seu comentário aqui mas mantenha a url para outras pessoas seguirem o comentário&gt;&via=gui_garcia67'>Comentários? Tweet</a> 
<a href='https://twitter.com/search?q=https://guilhermegarcia.dev/blog/poc-stream-de-videos-com-javascript-no-navegador.html'><span id='count-12726'></span></a>&nbsp;</p>
]]></description><link>https://guilhermegarcia.dev/blog/poc-stream-de-videos-com-javascript-no-navegador.html</link>
<guid>https://guilhermegarcia.dev/blog/./poc-stream-de-videos-com-javascript-no-navegador.html</guid>
<dc:creator>Guilherme Garcia</dc:creator>
<pubDate>Sat, 26 Mar 2022 19:40:00 -0300</pubDate></item>
<item><title>
Apps de linha de comando em dart
</title><description><![CDATA[

<p><abbr title="muito grande;nem li">mg;nl</abbr>: Vamos dar sequência ao app iniciado <a href="https://guilhermegarcia.dev/blog/oauth2-pela-linha-de-comando-em-dart.html">neste post</a>, explorando ferramentas da linguagem dart para tornar nosso aplicativo mais interativo, lendo e escrevendo input do usuário e arquivos, assim como permitindo ao usuário escolher entre possibilidades que alteram o fluxo do app.</p>

<p>No <a href="https://guilhermegarcia.dev/blog/oauth2-pela-linha-de-comando-em-dart.html">post anterior</a> desenvolvemos um aplicativo que autentica o usuário através do protocolo OAuth2, e, com as permissões concedidas, gera uma listagem dos seus repositórios, públicos e privados, com o link para acessá-los no GitHub.</p>

<p>Neste post, vamos extender algumas dessas funcionalidades, focando em tornar sua utilização mais fácil e intuitíva, facilitando o processo de configuração e partindo do princípio que o usuário final não possui conhecimentos de programação.</p>

<p>Se você quiser ir programando junto, nosso ponto de partida é o <a href="https://github.com/guites/dart-github-app/tree/oauth2_flux">branch oauth2_flux deste repositório</a>.</p>

<p>O código finalizado pode ser encontrado no branch <a href="https://github.com/guites/dart-github-app/tree/add_models">add_models</a></p>

<hr/>
<p>Tags: <a href='tag_dart.html'>dart</a>, <a href='tag_cli.html'>cli</a>, <a href='tag_api.html'>api</a>, <a href='tag_github.html'>github</a></p>
<p id='twitter'><a href='http://twitter.com/intent/tweet?url=https://guilhermegarcia.dev/blog/apps-de-linha-de-comando-em-dart.html&text=&lt;Escreva seu comentário aqui mas mantenha a url para outras pessoas seguirem o comentário&gt;&via=gui_garcia67'>Comentários? Tweet</a> 
<a href='https://twitter.com/search?q=https://guilhermegarcia.dev/blog/apps-de-linha-de-comando-em-dart.html'><span id='count-26991'></span></a>&nbsp;</p>
]]></description><link>https://guilhermegarcia.dev/blog/apps-de-linha-de-comando-em-dart.html</link>
<guid>https://guilhermegarcia.dev/blog/./apps-de-linha-de-comando-em-dart.html</guid>
<dc:creator>Guilherme Garcia</dc:creator>
<pubDate>Mon, 21 Mar 2022 22:49:43 -0300</pubDate></item>
<item><title>
OAuth2 pela linha de comando em Dart
</title><description><![CDATA[

<p><abbr title="muito grande; nem li">mg;nl</abbr>: vamos criar um app que autentica o usuário no GitHub via OAuth2 pela linha de comando, utilizando Dart.</p>

<p>Se você já utilizou aplicações como o heroku-cli, já experienciou o processo de autenticação OAuth2 pela linha de comando.</p>

<p>Você inicia o processo com um comando, por exemplo</p>

<pre><code>    heroku login
</code></pre>

<p>E é direcionado para uma página da web onde você confirma as permissões necessárias para o aplicativo, digitando um login e senha.</p>

<p>Depois, a página mostra uma mensagem de que tudo ocorreu bem, e que você pode voltar para a linha de comando.</p>

<p>Neste post vamos ver como esse processo pode ser realizado utilizando Dart, criando um aplicativo que lista os repositórios da sua conta no GitHub.</p>

<hr/>
<p>Tags: <a href='tag_dart.html'>dart</a>, <a href='tag_github.html'>github</a>, <a href='tag_oauth2.html'>oauth2</a>, <a href='tag_api.html'>api</a></p>
<p id='twitter'><a href='http://twitter.com/intent/tweet?url=https://guilhermegarcia.dev/blog/oauth2-pela-linha-de-comando-em-dart.html&text=&lt;Escreva seu comentário aqui mas mantenha a url para outras pessoas seguirem o comentário&gt;&via=gui_garcia67'>Comentários? Tweet</a> 
<a href='https://twitter.com/search?q=https://guilhermegarcia.dev/blog/oauth2-pela-linha-de-comando-em-dart.html'><span id='count-7667'></span></a>&nbsp;</p>
]]></description><link>https://guilhermegarcia.dev/blog/oauth2-pela-linha-de-comando-em-dart.html</link>
<guid>https://guilhermegarcia.dev/blog/./oauth2-pela-linha-de-comando-em-dart.html</guid>
<dc:creator>Guilherme Garcia</dc:creator>
<pubDate>Tue, 08 Mar 2022 00:44:01 -0300</pubDate></item>
<item><title>
Gerenciando estado num app Flutter com Provider
</title><description><![CDATA[

<p><abbr title="muito grande; nem li">mg;nl</abbr>: Neste post vamos implementar o plugin <a href="https://pub.dev/packages/provider">Provider</a> num app em Flutter, para comunicar valores de estado através do aplicativo. Vamos também otimizar a estrutura de um app já existente e entender o uso de controllers no ambito do provider.</p>

<p>Dando sequência ao que começamos <a href="https://guilhermegarcia.dev/blog/criando-um-app-com-flutter-e-sqlite.html">neste post</a>, vamos seguir desenvolvendo nosso app de acadêmia.</p>

<p>No fim do post anterior, nosso app consistia em um seletor de linguagem e, ao trocarmos a linguagem, atualizavamos os valores da nossa listagem de exercícios.</p>

<p>Neste post, vamos implementar o plugin <a href="https://pub.dev/packages/provider">Provider</a> para gerenciar o estado global do nosso app, assim como subdividir o código em uma estrura mais intuitiva, mostrando como podemos implementar o <code>Provider</code> para uma única, ou múltiplas, classes.</p>

<p>O código finalizado desta postagem pode ser baixado <a href="https://github.com/guites/flutter-gym-app/tree/select_exercises">neste branch do repositório</a>.</p>

<hr/>
<p>Tags: <a href='tag_flutter.html'>flutter</a></p>
<p id='twitter'><a href='http://twitter.com/intent/tweet?url=https://guilhermegarcia.dev/blog/gerenciando-estado-num-app-flutter-com-provider.html&text=&lt;Escreva seu comentário aqui mas mantenha a url para outras pessoas seguirem o comentário&gt;&via=gui_garcia67'>Comentários? Tweet</a> 
<a href='https://twitter.com/search?q=https://guilhermegarcia.dev/blog/gerenciando-estado-num-app-flutter-com-provider.html'><span id='count-13735'></span></a>&nbsp;</p>
]]></description><link>https://guilhermegarcia.dev/blog/gerenciando-estado-num-app-flutter-com-provider.html</link>
<guid>https://guilhermegarcia.dev/blog/./gerenciando-estado-num-app-flutter-com-provider.html</guid>
<dc:creator>Guilherme Garcia</dc:creator>
<pubDate>Mon, 28 Feb 2022 15:27:22 -0300</pubDate></item>
<item><title>
Criando um app com Flutter e sqlite
</title><description><![CDATA[

<p><abbr title="muito grande; nem li">mg;nl</abbr>: neste post vamos configurar um projeto em flutter utilizando sqlite3 e models criados utilizando geração de código. Vamos verificar também como exibir esses valores utilizando o Widget FutureBuilder.</p>

<p>Iniciei o desenvolvimento de um app de registro de exercícios.</p>

<p>Já existem muitos aplicativos ótimos nesse ambito, e muito mais completos, mas nenhum, na minha opinião, atingiu os 3 objetivos principais que eu buscava:</p>

<ol>
<li><p>interface simples e leve: um clique tem que me levar direto pra parte principal, sem login, sem configurações. Apenas um clique, escolher o exercício, e começar a registrar.</p></li>
<li><p>Registrar a quantidade de sets e o tempo de descanso: eu começo um exercício, faço um set e, enquanto descanso, penso na vida. Já se passaram 30 segundos, 1 minuto ou 3 minutos? Quantos sets eu já fiz, 2 ou 3?</p></li>
<li><p>Funcionar sem internet. Eu costumo revisar meu treino enquanto caminho pra academia, e não gosto de ficar à merce da qualidade de recepção da 4g.</p></li>
</ol>

<p>Optei por desenvolver em flutter, assim consigo gerar um apk instalável no meu celular, e também hospedar a versão web pra mostrar pras pessoas.</p>

<p>Neste post vou falar um pouco sobre integrar o uso de bancos de dado, em sqlite3, para aplicativos Flutter.</p>

<p>O banco de dados de exercícios foi adaptado do projeto <a href="https://github.com/wger-project/wger">wger</a>.</p>

<p>O código deste post pode ser encontrado no <a href="https://github.com/guites/flutter-gym-app/tree/main">branch main deste repositório</a>.</p>

<hr/>
<p>Tags: <a href='tag_flutter.html'>flutter</a>, <a href='tag_api.html'>api</a></p>
<p id='twitter'><a href='http://twitter.com/intent/tweet?url=https://guilhermegarcia.dev/blog/criando-um-app-com-flutter-e-sqlite.html&text=&lt;Escreva seu comentário aqui mas mantenha a url para outras pessoas seguirem o comentário&gt;&via=gui_garcia67'>Comentários? Tweet</a> 
<a href='https://twitter.com/search?q=https://guilhermegarcia.dev/blog/criando-um-app-com-flutter-e-sqlite.html'><span id='count-11456'></span></a>&nbsp;</p>
]]></description><link>https://guilhermegarcia.dev/blog/criando-um-app-com-flutter-e-sqlite.html</link>
<guid>https://guilhermegarcia.dev/blog/./criando-um-app-com-flutter-e-sqlite.html</guid>
<dc:creator>Guilherme Garcia</dc:creator>
<pubDate>Mon, 21 Feb 2022 08:40:47 -0300</pubDate></item>
</channel></rss>
